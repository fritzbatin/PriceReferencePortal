@model PriceReferencePortal.Context.supply

@{
    ViewBag.Title = "order_updateGetOrder";
}
<div class="container-fluid">
    <h2>order_updateGetOrder</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>orderDetail</h4>
    <hr />
    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>*@
    
    <div class="form-group">
        @Html.LabelFor(model => model.ordernumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ordernumber, new { htmlAttributes = new { @class = "form-control", @readonly = true, @Value = Session["OrderLastID"] } })
            @Html.ValidationMessageFor(model => model.ordernumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.supplyId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.supplyId, new { htmlAttributes = new { @class = "form-control", @readonly = true, @Value = ViewBag.SupplyID } })
            @Html.ValidationMessageFor(model => model.supplyId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.vendor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vendor, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.vendor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sku, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.sku, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.sku, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.delivery_lead_time, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.delivery_lead_time, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.delivery_lead_time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.validity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.validity, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.validity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.date_created, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.date_created, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.date_created, "", new { @class = "text-danger" })
        </div>
    </div>










    @*========================================================================*@
    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.price, "", new { @id = "Price", @class = "form-control txt", @readonly = true })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.qty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.qty, "", new { @id = "Qty", @class = "form-control txt", @Value = "1" })
            @Html.ValidationMessageFor(model => model.qty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.totalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @*<input id="Total" type="text" />*@

            @Html.TextBoxFor(model => model.totalAmount, "", new { @id = "Total", @class = "form-control txt", @readonly = true, @Value = Model.price } )

            @*@Html.EditorFor(model => model.totalAmount, new { htmlAttributes = new { @id = "Total", @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.totalAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    @*<div>
        @Html.ActionLink("Back to List", "UpdateOrder", new { id = Session["OrderLastID"] })
    </div>*@
</div>

@section scripts {

    <script type="text/javascript">
            $(document).ready(function () {

                //iterate through each textboxes and add keyup
                //handler to trigger sum event
                $(".txt").each(function () {

                    $(this).keyup(function () {
                        calculateSum();
                    });
                });

            });

            function calculateSum() {

                var sum = 0;
                //iterate through each textboxes and add the values
                $(".txt").each(function () {

                    //add only if the value is number
                    if (!isNaN(this.value) && this.value.length != 0) {
                        num1 = document.getElementById("Price").value;
                        num2 = document.getElementById("Qty").value;
                        sum = num1 * num2
                    }

                });
                //Assign the total value to Textbox 11
                $("#Total").val(sum);
            }
    </script>

}